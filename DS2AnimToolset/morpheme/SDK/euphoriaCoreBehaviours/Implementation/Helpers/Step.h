#pragma once

/*
* Copyright (c) 2011 NaturalMotion Ltd. All rights reserved.
*
* Not to be copied, adapted, modified, used, distributed, sold,
* licensed or commercially exploited in any manner without the
* written consent of NaturalMotion.
*
* All non public elements of this software are the confidential
* information of NaturalMotion and may not be disclosed to any
* person nor used for any purpose not expressly approved by
* NaturalMotion in writing.
*
*/

#ifndef NM_STEP_H
#define NM_STEP_H

#include "AutoGenerated/NetworkForceInclude.h"

#ifndef NM_BEHAVIOUR_LIB_NAMESPACE
  #error behaviour library namespace undefined
#endif

namespace NM_BEHAVIOUR_LIB_NAMESPACE
{

enum StepType { stepTypeArm, stepTypeLeg };

//----------------------------------------------------------------------------------------------------------------------
template<typename OwnerType, typename InType, typename OutType, typename DataType>
void updateStep(
  OwnerType& owner,
  InType& in, OutType& out, DataType& data,
  float timeStep,
  StepType stepType,
  MR::InstanceDebugInterface* pDebugDrawInst);

//----------------------------------------------------------------------------------------------------------------------
template<typename OwnerType, typename InType, typename FeedOutType, typename DataType>
inline void feedbackStep(
  OwnerType& owner,
  InType& in,
  FeedOutType& feedOut,
  DataType& data,
  const NMP::Vector3& avgOfEndPositions,
  float NMP_UNUSED(timeStep),
  StepType stepType,
  MR::InstanceDebugInterface* MR_OUTPUT_DEBUG_ARG(pDebugDrawInst));
}

#include "Helpers/Step.inl"

#endif
