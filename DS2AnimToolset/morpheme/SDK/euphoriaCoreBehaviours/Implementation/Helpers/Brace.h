#pragma once

/*
* Copyright (c) 2011 NaturalMotion Ltd. All rights reserved.
*
* Not to be copied, adapted, modified, used, distributed, sold,
* licensed or commercially exploited in any manner without the
* written consent of NaturalMotion.
*
* All non public elements of this software are the confidential
* information of NaturalMotion and may not be disclosed to any
* person nor used for any purpose not expressly approved by
* NaturalMotion in writing.
*
*/

#ifndef NM_BRACE_H
#define NM_BRACE_H

#include "AutoGenerated/NetworkForceInclude.h"
#include "AutoGenerated/Types/BraceDynamic.h"

#ifndef NM_BEHAVIOUR_LIB_NAMESPACE
  #error behaviour library namespace undefined
#endif
#define SCALING_SOURCE owner->data->dimensionalScaling
#include "euphoria/erDimensionalScalingHelpers.h"

namespace NM_BEHAVIOUR_LIB_NAMESPACE
{
//----------------------------------------------------------------------------------------------------------------------
// module independent brace function, which works equally on arms as well as legs
template<typename OwnerType, typename InType, typename DataType, typename OutType>
void applyBraceDynamic(
  BraceDynamic& dynamic,
  const OwnerType& owner,
  const InType& in,
  DataType& data,
  const ArmAndLegLimbSharedState& limbState,
  const OutType& out,
  const NMP::Vector3& protectPoint,
  const NMP::Vector3& hazardPosition,
  bool armCushion,
  bool inContactWithHazard,
  float clampLength,
  MR::InstanceDebugInterface* MR_OUTPUT_DEBUG_ARG(pDebugDrawInst));
}

#include "Helpers/Brace.inl"

#endif
