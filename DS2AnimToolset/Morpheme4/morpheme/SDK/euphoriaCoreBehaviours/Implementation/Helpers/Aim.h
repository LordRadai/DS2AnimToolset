#pragma once

/*
* Copyright (c) 2012 NaturalMotion Ltd. All rights reserved.
*
* Not to be copied, adapted, modified, used, distributed, sold,
* licensed or commercially exploited in any manner without the
* written consent of NaturalMotion.
*
* All non public elements of this software are the confidential
* information of NaturalMotion and may not be disclosed to any
* person nor used for any purpose not expressly approved by
* NaturalMotion in writing.
*
*/

#ifndef NM_AIM_H
#define NM_AIM_H

#include "AutoGenerated/NetworkForceInclude.h"
#include "NMPlatform/NMMatrix34.h"
#include "morpheme/mrInstanceDebugInterface.h"
#include "euphoria/erDimensionalScaling.h"

#ifndef NM_BEHAVIOUR_LIB_NAMESPACE
#error behaviour library namespace undefined
#endif

namespace NM_BEHAVIOUR_LIB_NAMESPACE
{
//----------------------------------------------------------------------------------------------------------------------
template<typename PackageType> inline void aimEndTargetCorrection(
  PackageType& NMP_UNUSED(pkg),
  NMP::Matrix34& NMP_UNUSED(targetTM),
  MR::InstanceDebugInterface* NMP_UNUSED(pDebugDrawInst))
{}

//----------------------------------------------------------------------------------------------------------------------
template<typename PackageType, typename LimbStateType>
inline NMP::Matrix34 aimUpdate(
  PackageType& pkg,
  const LimbStateType& limbState,
  MR::InstanceDebugInterface* MR_OUTPUT_DEBUG_ARG(pDebugDrawInst));

//----------------------------------------------------------------------------------------------------------------------
void matchWindingDirection(
  const NMP::Vector3& windingDirection,
  const NMP::Matrix34& currentTM,
  const NMP::Matrix34& poseTM,
  NMP::Matrix34& targetTM);
}

#include "Aim.inl"

#endif // NM_AIM_H
